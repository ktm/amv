//
// Created by ktm on 2/4/16.
//

#ifndef AMVMODEL_CHAI_SCRIPT_H
#define AMVMODEL_CHAI_SCRIPT_H

#ifdef TEST
#include "../../test/jstest.h"
#endif

#include <chaiscript/chaiscript.hpp>

#include <mutex>

class chaiscript_gateway {
#ifdef TEST
    friend class JSTest;
#endif

    std::mutex data_mutex;

    chaiscript::ChaiScript js_context;

    double toNumber(std::string arg);

    chaiscript_gateway();

public:
    static chaiscript_gateway& Instance() {
        static chaiscript_gateway INSTANCE;
        return INSTANCE;
    }

    bool evaluate_condition(std::string condition);
    void call(std::string fxnname);
    void call(std::string fxnname, std::string argnames[]);
    void write_to_js(std::string name, std::string value);
    /*
    chaiscript_gateway::Instance().js_context.add(chaiscript::fun(&serial_init),    "serialInit");
    chaiscript_gateway::Instance().js_context.add(chaiscript::fun(&serial_config),  "serialConfig");
    chaiscript_gateway::Instance().js_context.add(chaiscript::fun(&serial_println), "serialPrintln");
    chaiscript_gateway::Instance().js_context.add(chaiscript::fun(&serial_readln),  "serialReadln");
    chaiscript_gateway::Instance().js_context.add(chaiscript::fun(&serial_close),   "serialClose");
*/

    void add()
};


#endif //AMVMODEL_CHAI_SCRIPT_H
